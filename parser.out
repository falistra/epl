Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> stm
Rule 2     program -> stm SEMICOL program
Rule 3     stm -> PRINT LPAREN exp RPAREN
Rule 4     stm -> exp
Rule 5     stm -> varStore EQUALS exp
Rule 6     exp -> LPAREN exp RPAREN
Rule 7     exp -> varLoad
Rule 8     exp -> validity
Rule 9     exp -> conditioning
Rule 10    exp -> state
Rule 11    exp -> stateExp
Rule 12    exp -> predicate
Rule 13    exp -> predicateExp
Rule 14    exp -> channel
Rule 15    exp -> channelExp
Rule 16    exp -> stateTransformation
Rule 17    exp -> predicateTransformation
Rule 18    exp -> builtin_function
Rule 19    varLoad -> NAME
Rule 20    varStore -> NAME
Rule 21    validity -> exp VALIDITY exp
Rule 22    conditioning -> exp CONDITIONING exp
Rule 23    stateTransformation -> exp R_A_PAREN exp
Rule 24    predicateTransformation -> exp L_A_PAREN exp
Rule 25    state -> L_S_PAREN stateBody R_S_PAREN
Rule 26    stateBody -> stateElem PLUS stateBody
Rule 27    stateBody -> stateElem
Rule 28    stateElem -> PROBABILITY_VALUE PIPE nameOrBool optionKET
Rule 29    nameOrBool -> name
Rule 30    nameOrBool -> string
Rule 31    nameOrBool -> boolean
Rule 32    name -> NAME
Rule 33    string -> STRING
Rule 34    boolean -> TRUE
Rule 35    boolean -> FALSE
Rule 36    optionKET -> KET
Rule 37    optionKET -> empty
Rule 38    stateExp -> exp MARGINAL dimensionSel
Rule 39    dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN
Rule 40    dimensionSelBody -> dimensionSelElem COMMA dimensionSelBody
Rule 41    dimensionSelBody -> dimensionSelElem
Rule 42    dimensionSelElem -> BIT
Rule 43    predicate -> L_B_PAREN predicateBody R_B_PAREN
Rule 44    predicateBody -> predicateElem COMMA predicateBody
Rule 45    predicateBody -> predicateElem
Rule 46    predicateElem -> nameOrBool COLON PROBABILITY_VALUE
Rule 47    predicateExp -> exp CROSS exp
Rule 48    predicateExp -> exp AND exp
Rule 49    predicateExp -> exp PLUS exp
Rule 50    predicateExp -> exp PIPE exp
Rule 51    predicateExp -> PROBABILITY_VALUE STAR exp
Rule 52    predicateExp -> NEGATE exp
Rule 53    channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
Rule 54    matrice -> L_S_PAREN righe R_S_PAREN
Rule 55    righe -> riga COMMA righe
Rule 56    righe -> riga
Rule 57    riga -> L_S_PAREN riga_values R_S_PAREN
Rule 58    riga_values -> PROBABILITY_VALUE
Rule 59    riga_values -> PROBABILITY_VALUE COMMA riga_values
Rule 60    channelExp -> exp STAR exp
Rule 61    domcod -> L_S_PAREN domcod_values R_S_PAREN
Rule 62    domcod_values -> nameOrBool
Rule 63    domcod_values -> nameOrBool COMMA domcod_values
Rule 64    builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN
Rule 65    builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN
Rule 66    builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN
Rule 67    builtin_function -> FALSITY LPAREN domcod_values RPAREN
Rule 68    builtin_function -> COPY LPAREN domcod_values RPAREN
Rule 69    builtin_function -> IDN LPAREN domcod_values RPAREN
Rule 70    builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN
Rule 71    builtin_function -> CPT LPAREN riga_values RPAREN
Rule 72    builtin_function -> TRUTH LPAREN domcod_values RPAREN
Rule 73    empty -> <empty>

Terminals, with rules where they appear

AND                  : 48
BIT                  : 42
COLON                : 46
COMMA                : 40 44 53 53 55 59 63 70
CONDITIONING         : 22
COPY                 : 68
CPT                  : 71
CROSS                : 47
EQUALS               : 5
FALSE                : 35
FALSITY              : 67
FLIP                 : 64
IDN                  : 69
KET                  : 36
LPAREN               : 3 6 64 65 66 67 68 69 70 71 72
L_A_PAREN            : 24 53
L_B_PAREN            : 43
L_S_PAREN            : 25 39 54 57 61
MARGINAL             : 38
NAME                 : 19 20 32
NEGATE               : 52
PIPE                 : 28 50
PLUS                 : 26 49
PRINT                : 3
PROBABILITY_VALUE    : 28 46 51 58 59 64
RANDOM_STATE         : 66
RPAREN               : 3 6 64 65 66 67 68 69 70 71 72
R_A_PAREN            : 23 53
R_B_PAREN            : 43
R_S_PAREN            : 25 39 54 57 61
SEMICOL              : 2
STAR                 : 51 60
STRING               : 33
SWAP                 : 70
TRUE                 : 34
TRUTH                : 72
UNIFORM_STATE        : 65
VALIDITY             : 21
error                : 

Nonterminals, with rules where they appear

boolean              : 31
builtin_function     : 18
channel              : 14
channelExp           : 15
conditioning         : 9
dimensionSel         : 38
dimensionSelBody     : 39 40
dimensionSelElem     : 40 41
domcod               : 53 53 70 70
domcod_values        : 61 63 65 66 67 68 69 72
empty                : 37
exp                  : 3 4 5 6 21 21 22 22 23 23 24 24 38 47 47 48 48 49 49 50 50 51 52 60 60
matrice              : 53
name                 : 29
nameOrBool           : 28 46 62 63
optionKET            : 28
predicate            : 12
predicateBody        : 43 44
predicateElem        : 44 45
predicateExp         : 13
predicateTransformation : 17
program              : 2 0
riga                 : 55 56
riga_values          : 57 59 71
righe                : 54 55
state                : 10
stateBody            : 25 26
stateElem            : 26 27
stateExp             : 11
stateTransformation  : 16
stm                  : 1 2
string               : 30
validity             : 8
varLoad              : 7
varStore             : 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . stm
    (2) program -> . stm SEMICOL program
    (3) stm -> . PRINT LPAREN exp RPAREN
    (4) stm -> . exp
    (5) stm -> . varStore EQUALS exp
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (20) varStore -> . NAME
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    PRINT           shift and go to state 3
    LPAREN          shift and go to state 4
    NAME            shift and go to state 19
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    program                        shift and go to state 1
    stm                            shift and go to state 2
    exp                            shift and go to state 5
    varStore                       shift and go to state 6
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 1

    (0) S' -> program .



state 2

    (1) program -> stm .
    (2) program -> stm . SEMICOL program

    $end            reduce using rule 1 (program -> stm .)
    SEMICOL         shift and go to state 34


state 3

    (3) stm -> PRINT . LPAREN exp RPAREN

    LPAREN          shift and go to state 35


state 4

    (6) exp -> LPAREN . exp RPAREN
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 4
    NAME            shift and go to state 37
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    exp                            shift and go to state 36
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 5

    (4) stm -> exp .
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

    SEMICOL         reduce using rule 4 (stm -> exp .)
    $end            reduce using rule 4 (stm -> exp .)
    VALIDITY        shift and go to state 38
    CONDITIONING    shift and go to state 39
    MARGINAL        shift and go to state 40
    CROSS           shift and go to state 41
    AND             shift and go to state 42
    PLUS            shift and go to state 43
    PIPE            shift and go to state 44
    STAR            shift and go to state 45
    R_A_PAREN       shift and go to state 46
    L_A_PAREN       shift and go to state 47


state 6

    (5) stm -> varStore . EQUALS exp

    EQUALS          shift and go to state 48


state 7

    (7) exp -> varLoad .

    VALIDITY        reduce using rule 7 (exp -> varLoad .)
    CONDITIONING    reduce using rule 7 (exp -> varLoad .)
    MARGINAL        reduce using rule 7 (exp -> varLoad .)
    CROSS           reduce using rule 7 (exp -> varLoad .)
    AND             reduce using rule 7 (exp -> varLoad .)
    PLUS            reduce using rule 7 (exp -> varLoad .)
    PIPE            reduce using rule 7 (exp -> varLoad .)
    STAR            reduce using rule 7 (exp -> varLoad .)
    R_A_PAREN       reduce using rule 7 (exp -> varLoad .)
    L_A_PAREN       reduce using rule 7 (exp -> varLoad .)
    SEMICOL         reduce using rule 7 (exp -> varLoad .)
    $end            reduce using rule 7 (exp -> varLoad .)
    RPAREN          reduce using rule 7 (exp -> varLoad .)


state 8

    (8) exp -> validity .

    VALIDITY        reduce using rule 8 (exp -> validity .)
    CONDITIONING    reduce using rule 8 (exp -> validity .)
    MARGINAL        reduce using rule 8 (exp -> validity .)
    CROSS           reduce using rule 8 (exp -> validity .)
    AND             reduce using rule 8 (exp -> validity .)
    PLUS            reduce using rule 8 (exp -> validity .)
    PIPE            reduce using rule 8 (exp -> validity .)
    STAR            reduce using rule 8 (exp -> validity .)
    R_A_PAREN       reduce using rule 8 (exp -> validity .)
    L_A_PAREN       reduce using rule 8 (exp -> validity .)
    SEMICOL         reduce using rule 8 (exp -> validity .)
    $end            reduce using rule 8 (exp -> validity .)
    RPAREN          reduce using rule 8 (exp -> validity .)


state 9

    (9) exp -> conditioning .

    VALIDITY        reduce using rule 9 (exp -> conditioning .)
    CONDITIONING    reduce using rule 9 (exp -> conditioning .)
    MARGINAL        reduce using rule 9 (exp -> conditioning .)
    CROSS           reduce using rule 9 (exp -> conditioning .)
    AND             reduce using rule 9 (exp -> conditioning .)
    PLUS            reduce using rule 9 (exp -> conditioning .)
    PIPE            reduce using rule 9 (exp -> conditioning .)
    STAR            reduce using rule 9 (exp -> conditioning .)
    R_A_PAREN       reduce using rule 9 (exp -> conditioning .)
    L_A_PAREN       reduce using rule 9 (exp -> conditioning .)
    SEMICOL         reduce using rule 9 (exp -> conditioning .)
    $end            reduce using rule 9 (exp -> conditioning .)
    RPAREN          reduce using rule 9 (exp -> conditioning .)


state 10

    (10) exp -> state .

    VALIDITY        reduce using rule 10 (exp -> state .)
    CONDITIONING    reduce using rule 10 (exp -> state .)
    MARGINAL        reduce using rule 10 (exp -> state .)
    CROSS           reduce using rule 10 (exp -> state .)
    AND             reduce using rule 10 (exp -> state .)
    PLUS            reduce using rule 10 (exp -> state .)
    PIPE            reduce using rule 10 (exp -> state .)
    STAR            reduce using rule 10 (exp -> state .)
    R_A_PAREN       reduce using rule 10 (exp -> state .)
    L_A_PAREN       reduce using rule 10 (exp -> state .)
    SEMICOL         reduce using rule 10 (exp -> state .)
    $end            reduce using rule 10 (exp -> state .)
    RPAREN          reduce using rule 10 (exp -> state .)


state 11

    (11) exp -> stateExp .

    VALIDITY        reduce using rule 11 (exp -> stateExp .)
    CONDITIONING    reduce using rule 11 (exp -> stateExp .)
    MARGINAL        reduce using rule 11 (exp -> stateExp .)
    CROSS           reduce using rule 11 (exp -> stateExp .)
    AND             reduce using rule 11 (exp -> stateExp .)
    PLUS            reduce using rule 11 (exp -> stateExp .)
    PIPE            reduce using rule 11 (exp -> stateExp .)
    STAR            reduce using rule 11 (exp -> stateExp .)
    R_A_PAREN       reduce using rule 11 (exp -> stateExp .)
    L_A_PAREN       reduce using rule 11 (exp -> stateExp .)
    SEMICOL         reduce using rule 11 (exp -> stateExp .)
    $end            reduce using rule 11 (exp -> stateExp .)
    RPAREN          reduce using rule 11 (exp -> stateExp .)


state 12

    (12) exp -> predicate .

    VALIDITY        reduce using rule 12 (exp -> predicate .)
    CONDITIONING    reduce using rule 12 (exp -> predicate .)
    MARGINAL        reduce using rule 12 (exp -> predicate .)
    CROSS           reduce using rule 12 (exp -> predicate .)
    AND             reduce using rule 12 (exp -> predicate .)
    PLUS            reduce using rule 12 (exp -> predicate .)
    PIPE            reduce using rule 12 (exp -> predicate .)
    STAR            reduce using rule 12 (exp -> predicate .)
    R_A_PAREN       reduce using rule 12 (exp -> predicate .)
    L_A_PAREN       reduce using rule 12 (exp -> predicate .)
    SEMICOL         reduce using rule 12 (exp -> predicate .)
    $end            reduce using rule 12 (exp -> predicate .)
    RPAREN          reduce using rule 12 (exp -> predicate .)


state 13

    (13) exp -> predicateExp .

    VALIDITY        reduce using rule 13 (exp -> predicateExp .)
    CONDITIONING    reduce using rule 13 (exp -> predicateExp .)
    MARGINAL        reduce using rule 13 (exp -> predicateExp .)
    CROSS           reduce using rule 13 (exp -> predicateExp .)
    AND             reduce using rule 13 (exp -> predicateExp .)
    PLUS            reduce using rule 13 (exp -> predicateExp .)
    PIPE            reduce using rule 13 (exp -> predicateExp .)
    STAR            reduce using rule 13 (exp -> predicateExp .)
    R_A_PAREN       reduce using rule 13 (exp -> predicateExp .)
    L_A_PAREN       reduce using rule 13 (exp -> predicateExp .)
    SEMICOL         reduce using rule 13 (exp -> predicateExp .)
    $end            reduce using rule 13 (exp -> predicateExp .)
    RPAREN          reduce using rule 13 (exp -> predicateExp .)


state 14

    (14) exp -> channel .

    VALIDITY        reduce using rule 14 (exp -> channel .)
    CONDITIONING    reduce using rule 14 (exp -> channel .)
    MARGINAL        reduce using rule 14 (exp -> channel .)
    CROSS           reduce using rule 14 (exp -> channel .)
    AND             reduce using rule 14 (exp -> channel .)
    PLUS            reduce using rule 14 (exp -> channel .)
    PIPE            reduce using rule 14 (exp -> channel .)
    STAR            reduce using rule 14 (exp -> channel .)
    R_A_PAREN       reduce using rule 14 (exp -> channel .)
    L_A_PAREN       reduce using rule 14 (exp -> channel .)
    SEMICOL         reduce using rule 14 (exp -> channel .)
    $end            reduce using rule 14 (exp -> channel .)
    RPAREN          reduce using rule 14 (exp -> channel .)


state 15

    (15) exp -> channelExp .

    VALIDITY        reduce using rule 15 (exp -> channelExp .)
    CONDITIONING    reduce using rule 15 (exp -> channelExp .)
    MARGINAL        reduce using rule 15 (exp -> channelExp .)
    CROSS           reduce using rule 15 (exp -> channelExp .)
    AND             reduce using rule 15 (exp -> channelExp .)
    PLUS            reduce using rule 15 (exp -> channelExp .)
    PIPE            reduce using rule 15 (exp -> channelExp .)
    STAR            reduce using rule 15 (exp -> channelExp .)
    R_A_PAREN       reduce using rule 15 (exp -> channelExp .)
    L_A_PAREN       reduce using rule 15 (exp -> channelExp .)
    SEMICOL         reduce using rule 15 (exp -> channelExp .)
    $end            reduce using rule 15 (exp -> channelExp .)
    RPAREN          reduce using rule 15 (exp -> channelExp .)


state 16

    (16) exp -> stateTransformation .

    VALIDITY        reduce using rule 16 (exp -> stateTransformation .)
    CONDITIONING    reduce using rule 16 (exp -> stateTransformation .)
    MARGINAL        reduce using rule 16 (exp -> stateTransformation .)
    CROSS           reduce using rule 16 (exp -> stateTransformation .)
    AND             reduce using rule 16 (exp -> stateTransformation .)
    PLUS            reduce using rule 16 (exp -> stateTransformation .)
    PIPE            reduce using rule 16 (exp -> stateTransformation .)
    STAR            reduce using rule 16 (exp -> stateTransformation .)
    R_A_PAREN       reduce using rule 16 (exp -> stateTransformation .)
    L_A_PAREN       reduce using rule 16 (exp -> stateTransformation .)
    SEMICOL         reduce using rule 16 (exp -> stateTransformation .)
    $end            reduce using rule 16 (exp -> stateTransformation .)
    RPAREN          reduce using rule 16 (exp -> stateTransformation .)


state 17

    (17) exp -> predicateTransformation .

    VALIDITY        reduce using rule 17 (exp -> predicateTransformation .)
    CONDITIONING    reduce using rule 17 (exp -> predicateTransformation .)
    MARGINAL        reduce using rule 17 (exp -> predicateTransformation .)
    CROSS           reduce using rule 17 (exp -> predicateTransformation .)
    AND             reduce using rule 17 (exp -> predicateTransformation .)
    PLUS            reduce using rule 17 (exp -> predicateTransformation .)
    PIPE            reduce using rule 17 (exp -> predicateTransformation .)
    STAR            reduce using rule 17 (exp -> predicateTransformation .)
    R_A_PAREN       reduce using rule 17 (exp -> predicateTransformation .)
    L_A_PAREN       reduce using rule 17 (exp -> predicateTransformation .)
    SEMICOL         reduce using rule 17 (exp -> predicateTransformation .)
    $end            reduce using rule 17 (exp -> predicateTransformation .)
    RPAREN          reduce using rule 17 (exp -> predicateTransformation .)


state 18

    (18) exp -> builtin_function .

    VALIDITY        reduce using rule 18 (exp -> builtin_function .)
    CONDITIONING    reduce using rule 18 (exp -> builtin_function .)
    MARGINAL        reduce using rule 18 (exp -> builtin_function .)
    CROSS           reduce using rule 18 (exp -> builtin_function .)
    AND             reduce using rule 18 (exp -> builtin_function .)
    PLUS            reduce using rule 18 (exp -> builtin_function .)
    PIPE            reduce using rule 18 (exp -> builtin_function .)
    STAR            reduce using rule 18 (exp -> builtin_function .)
    R_A_PAREN       reduce using rule 18 (exp -> builtin_function .)
    L_A_PAREN       reduce using rule 18 (exp -> builtin_function .)
    SEMICOL         reduce using rule 18 (exp -> builtin_function .)
    $end            reduce using rule 18 (exp -> builtin_function .)
    RPAREN          reduce using rule 18 (exp -> builtin_function .)


state 19

    (20) varStore -> NAME .
    (19) varLoad -> NAME .

    EQUALS          reduce using rule 20 (varStore -> NAME .)
    VALIDITY        reduce using rule 19 (varLoad -> NAME .)
    CONDITIONING    reduce using rule 19 (varLoad -> NAME .)
    MARGINAL        reduce using rule 19 (varLoad -> NAME .)
    CROSS           reduce using rule 19 (varLoad -> NAME .)
    AND             reduce using rule 19 (varLoad -> NAME .)
    PLUS            reduce using rule 19 (varLoad -> NAME .)
    PIPE            reduce using rule 19 (varLoad -> NAME .)
    STAR            reduce using rule 19 (varLoad -> NAME .)
    R_A_PAREN       reduce using rule 19 (varLoad -> NAME .)
    L_A_PAREN       reduce using rule 19 (varLoad -> NAME .)
    SEMICOL         reduce using rule 19 (varLoad -> NAME .)
    $end            reduce using rule 19 (varLoad -> NAME .)


state 20

    (25) state -> L_S_PAREN . stateBody R_S_PAREN
    (26) stateBody -> . stateElem PLUS stateBody
    (27) stateBody -> . stateElem
    (28) stateElem -> . PROBABILITY_VALUE PIPE nameOrBool optionKET

    PROBABILITY_VALUE shift and go to state 51

    stateBody                      shift and go to state 49
    stateElem                      shift and go to state 50

state 21

    (43) predicate -> L_B_PAREN . predicateBody R_B_PAREN
    (44) predicateBody -> . predicateElem COMMA predicateBody
    (45) predicateBody -> . predicateElem
    (46) predicateElem -> . nameOrBool COLON PROBABILITY_VALUE
    (29) nameOrBool -> . name
    (30) nameOrBool -> . string
    (31) nameOrBool -> . boolean
    (32) name -> . NAME
    (33) string -> . STRING
    (34) boolean -> . TRUE
    (35) boolean -> . FALSE

    NAME            shift and go to state 58
    STRING          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    predicateBody                  shift and go to state 52
    predicateElem                  shift and go to state 53
    nameOrBool                     shift and go to state 54
    name                           shift and go to state 55
    string                         shift and go to state 56
    boolean                        shift and go to state 57

state 22

    (51) predicateExp -> PROBABILITY_VALUE . STAR exp

    STAR            shift and go to state 62


state 23

    (52) predicateExp -> NEGATE . exp
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 4
    NAME            shift and go to state 37
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    exp                            shift and go to state 63
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 24

    (53) channel -> L_A_PAREN . matrice COMMA domcod COMMA domcod R_A_PAREN
    (54) matrice -> . L_S_PAREN righe R_S_PAREN

    L_S_PAREN       shift and go to state 65

    matrice                        shift and go to state 64

state 25

    (64) builtin_function -> FLIP . LPAREN PROBABILITY_VALUE RPAREN

    LPAREN          shift and go to state 66


state 26

    (65) builtin_function -> UNIFORM_STATE . LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 67


state 27

    (66) builtin_function -> RANDOM_STATE . LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 68


state 28

    (67) builtin_function -> FALSITY . LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 69


state 29

    (68) builtin_function -> COPY . LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 70


state 30

    (69) builtin_function -> IDN . LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 71


state 31

    (70) builtin_function -> SWAP . LPAREN domcod COMMA domcod RPAREN

    LPAREN          shift and go to state 72


state 32

    (71) builtin_function -> CPT . LPAREN riga_values RPAREN

    LPAREN          shift and go to state 73


state 33

    (72) builtin_function -> TRUTH . LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 74


state 34

    (2) program -> stm SEMICOL . program
    (1) program -> . stm
    (2) program -> . stm SEMICOL program
    (3) stm -> . PRINT LPAREN exp RPAREN
    (4) stm -> . exp
    (5) stm -> . varStore EQUALS exp
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (20) varStore -> . NAME
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    PRINT           shift and go to state 3
    LPAREN          shift and go to state 4
    NAME            shift and go to state 19
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    stm                            shift and go to state 2
    program                        shift and go to state 75
    exp                            shift and go to state 5
    varStore                       shift and go to state 6
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 35

    (3) stm -> PRINT LPAREN . exp RPAREN
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 4
    NAME            shift and go to state 37
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    exp                            shift and go to state 76
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 36

    (6) exp -> LPAREN exp . RPAREN
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

    RPAREN          shift and go to state 77
    VALIDITY        shift and go to state 38
    CONDITIONING    shift and go to state 39
    MARGINAL        shift and go to state 40
    CROSS           shift and go to state 41
    AND             shift and go to state 42
    PLUS            shift and go to state 43
    PIPE            shift and go to state 44
    STAR            shift and go to state 45
    R_A_PAREN       shift and go to state 46
    L_A_PAREN       shift and go to state 47


state 37

    (19) varLoad -> NAME .

    RPAREN          reduce using rule 19 (varLoad -> NAME .)
    VALIDITY        reduce using rule 19 (varLoad -> NAME .)
    CONDITIONING    reduce using rule 19 (varLoad -> NAME .)
    MARGINAL        reduce using rule 19 (varLoad -> NAME .)
    CROSS           reduce using rule 19 (varLoad -> NAME .)
    AND             reduce using rule 19 (varLoad -> NAME .)
    PLUS            reduce using rule 19 (varLoad -> NAME .)
    PIPE            reduce using rule 19 (varLoad -> NAME .)
    STAR            reduce using rule 19 (varLoad -> NAME .)
    R_A_PAREN       reduce using rule 19 (varLoad -> NAME .)
    L_A_PAREN       reduce using rule 19 (varLoad -> NAME .)
    SEMICOL         reduce using rule 19 (varLoad -> NAME .)
    $end            reduce using rule 19 (varLoad -> NAME .)


state 38

    (21) validity -> exp VALIDITY . exp
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 4
    NAME            shift and go to state 37
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    exp                            shift and go to state 78
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 39

    (22) conditioning -> exp CONDITIONING . exp
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 4
    NAME            shift and go to state 37
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    exp                            shift and go to state 79
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 40

    (38) stateExp -> exp MARGINAL . dimensionSel
    (39) dimensionSel -> . L_S_PAREN dimensionSelBody R_S_PAREN

    L_S_PAREN       shift and go to state 81

    dimensionSel                   shift and go to state 80

state 41

    (47) predicateExp -> exp CROSS . exp
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 4
    NAME            shift and go to state 37
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    exp                            shift and go to state 82
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 42

    (48) predicateExp -> exp AND . exp
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 4
    NAME            shift and go to state 37
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    exp                            shift and go to state 83
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 43

    (49) predicateExp -> exp PLUS . exp
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 4
    NAME            shift and go to state 37
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    exp                            shift and go to state 84
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 44

    (50) predicateExp -> exp PIPE . exp
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 4
    NAME            shift and go to state 37
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    exp                            shift and go to state 85
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 45

    (60) channelExp -> exp STAR . exp
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 4
    NAME            shift and go to state 37
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    exp                            shift and go to state 86
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 46

    (23) stateTransformation -> exp R_A_PAREN . exp
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 4
    NAME            shift and go to state 37
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    exp                            shift and go to state 87
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 47

    (24) predicateTransformation -> exp L_A_PAREN . exp
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 4
    NAME            shift and go to state 37
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    exp                            shift and go to state 88
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 48

    (5) stm -> varStore EQUALS . exp
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 4
    NAME            shift and go to state 37
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    exp                            shift and go to state 89
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 49

    (25) state -> L_S_PAREN stateBody . R_S_PAREN

    R_S_PAREN       shift and go to state 90


state 50

    (26) stateBody -> stateElem . PLUS stateBody
    (27) stateBody -> stateElem .

    PLUS            shift and go to state 91
    R_S_PAREN       reduce using rule 27 (stateBody -> stateElem .)


state 51

    (28) stateElem -> PROBABILITY_VALUE . PIPE nameOrBool optionKET

    PIPE            shift and go to state 92


state 52

    (43) predicate -> L_B_PAREN predicateBody . R_B_PAREN

    R_B_PAREN       shift and go to state 93


state 53

    (44) predicateBody -> predicateElem . COMMA predicateBody
    (45) predicateBody -> predicateElem .

    COMMA           shift and go to state 94
    R_B_PAREN       reduce using rule 45 (predicateBody -> predicateElem .)


state 54

    (46) predicateElem -> nameOrBool . COLON PROBABILITY_VALUE

    COLON           shift and go to state 95


state 55

    (29) nameOrBool -> name .

    COLON           reduce using rule 29 (nameOrBool -> name .)
    COMMA           reduce using rule 29 (nameOrBool -> name .)
    RPAREN          reduce using rule 29 (nameOrBool -> name .)
    KET             reduce using rule 29 (nameOrBool -> name .)
    PLUS            reduce using rule 29 (nameOrBool -> name .)
    R_S_PAREN       reduce using rule 29 (nameOrBool -> name .)


state 56

    (30) nameOrBool -> string .

    COLON           reduce using rule 30 (nameOrBool -> string .)
    COMMA           reduce using rule 30 (nameOrBool -> string .)
    RPAREN          reduce using rule 30 (nameOrBool -> string .)
    KET             reduce using rule 30 (nameOrBool -> string .)
    PLUS            reduce using rule 30 (nameOrBool -> string .)
    R_S_PAREN       reduce using rule 30 (nameOrBool -> string .)


state 57

    (31) nameOrBool -> boolean .

    COLON           reduce using rule 31 (nameOrBool -> boolean .)
    COMMA           reduce using rule 31 (nameOrBool -> boolean .)
    RPAREN          reduce using rule 31 (nameOrBool -> boolean .)
    KET             reduce using rule 31 (nameOrBool -> boolean .)
    PLUS            reduce using rule 31 (nameOrBool -> boolean .)
    R_S_PAREN       reduce using rule 31 (nameOrBool -> boolean .)


state 58

    (32) name -> NAME .

    COLON           reduce using rule 32 (name -> NAME .)
    COMMA           reduce using rule 32 (name -> NAME .)
    RPAREN          reduce using rule 32 (name -> NAME .)
    KET             reduce using rule 32 (name -> NAME .)
    PLUS            reduce using rule 32 (name -> NAME .)
    R_S_PAREN       reduce using rule 32 (name -> NAME .)


state 59

    (33) string -> STRING .

    COLON           reduce using rule 33 (string -> STRING .)
    COMMA           reduce using rule 33 (string -> STRING .)
    RPAREN          reduce using rule 33 (string -> STRING .)
    KET             reduce using rule 33 (string -> STRING .)
    PLUS            reduce using rule 33 (string -> STRING .)
    R_S_PAREN       reduce using rule 33 (string -> STRING .)


state 60

    (34) boolean -> TRUE .

    COLON           reduce using rule 34 (boolean -> TRUE .)
    COMMA           reduce using rule 34 (boolean -> TRUE .)
    RPAREN          reduce using rule 34 (boolean -> TRUE .)
    KET             reduce using rule 34 (boolean -> TRUE .)
    PLUS            reduce using rule 34 (boolean -> TRUE .)
    R_S_PAREN       reduce using rule 34 (boolean -> TRUE .)


state 61

    (35) boolean -> FALSE .

    COLON           reduce using rule 35 (boolean -> FALSE .)
    COMMA           reduce using rule 35 (boolean -> FALSE .)
    RPAREN          reduce using rule 35 (boolean -> FALSE .)
    KET             reduce using rule 35 (boolean -> FALSE .)
    PLUS            reduce using rule 35 (boolean -> FALSE .)
    R_S_PAREN       reduce using rule 35 (boolean -> FALSE .)


state 62

    (51) predicateExp -> PROBABILITY_VALUE STAR . exp
    (6) exp -> . LPAREN exp RPAREN
    (7) exp -> . varLoad
    (8) exp -> . validity
    (9) exp -> . conditioning
    (10) exp -> . state
    (11) exp -> . stateExp
    (12) exp -> . predicate
    (13) exp -> . predicateExp
    (14) exp -> . channel
    (15) exp -> . channelExp
    (16) exp -> . stateTransformation
    (17) exp -> . predicateTransformation
    (18) exp -> . builtin_function
    (19) varLoad -> . NAME
    (21) validity -> . exp VALIDITY exp
    (22) conditioning -> . exp CONDITIONING exp
    (25) state -> . L_S_PAREN stateBody R_S_PAREN
    (38) stateExp -> . exp MARGINAL dimensionSel
    (43) predicate -> . L_B_PAREN predicateBody R_B_PAREN
    (47) predicateExp -> . exp CROSS exp
    (48) predicateExp -> . exp AND exp
    (49) predicateExp -> . exp PLUS exp
    (50) predicateExp -> . exp PIPE exp
    (51) predicateExp -> . PROBABILITY_VALUE STAR exp
    (52) predicateExp -> . NEGATE exp
    (53) channel -> . L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN
    (60) channelExp -> . exp STAR exp
    (23) stateTransformation -> . exp R_A_PAREN exp
    (24) predicateTransformation -> . exp L_A_PAREN exp
    (64) builtin_function -> . FLIP LPAREN PROBABILITY_VALUE RPAREN
    (65) builtin_function -> . UNIFORM_STATE LPAREN domcod_values RPAREN
    (66) builtin_function -> . RANDOM_STATE LPAREN domcod_values RPAREN
    (67) builtin_function -> . FALSITY LPAREN domcod_values RPAREN
    (68) builtin_function -> . COPY LPAREN domcod_values RPAREN
    (69) builtin_function -> . IDN LPAREN domcod_values RPAREN
    (70) builtin_function -> . SWAP LPAREN domcod COMMA domcod RPAREN
    (71) builtin_function -> . CPT LPAREN riga_values RPAREN
    (72) builtin_function -> . TRUTH LPAREN domcod_values RPAREN

    LPAREN          shift and go to state 4
    NAME            shift and go to state 37
    L_S_PAREN       shift and go to state 20
    L_B_PAREN       shift and go to state 21
    PROBABILITY_VALUE shift and go to state 22
    NEGATE          shift and go to state 23
    L_A_PAREN       shift and go to state 24
    FLIP            shift and go to state 25
    UNIFORM_STATE   shift and go to state 26
    RANDOM_STATE    shift and go to state 27
    FALSITY         shift and go to state 28
    COPY            shift and go to state 29
    IDN             shift and go to state 30
    SWAP            shift and go to state 31
    CPT             shift and go to state 32
    TRUTH           shift and go to state 33

    exp                            shift and go to state 96
    varLoad                        shift and go to state 7
    validity                       shift and go to state 8
    conditioning                   shift and go to state 9
    state                          shift and go to state 10
    stateExp                       shift and go to state 11
    predicate                      shift and go to state 12
    predicateExp                   shift and go to state 13
    channel                        shift and go to state 14
    channelExp                     shift and go to state 15
    stateTransformation            shift and go to state 16
    predicateTransformation        shift and go to state 17
    builtin_function               shift and go to state 18

state 63

    (52) predicateExp -> NEGATE exp .
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

    VALIDITY        reduce using rule 52 (predicateExp -> NEGATE exp .)
    CONDITIONING    reduce using rule 52 (predicateExp -> NEGATE exp .)
    MARGINAL        reduce using rule 52 (predicateExp -> NEGATE exp .)
    CROSS           reduce using rule 52 (predicateExp -> NEGATE exp .)
    AND             reduce using rule 52 (predicateExp -> NEGATE exp .)
    PLUS            reduce using rule 52 (predicateExp -> NEGATE exp .)
    PIPE            reduce using rule 52 (predicateExp -> NEGATE exp .)
    STAR            reduce using rule 52 (predicateExp -> NEGATE exp .)
    R_A_PAREN       reduce using rule 52 (predicateExp -> NEGATE exp .)
    L_A_PAREN       reduce using rule 52 (predicateExp -> NEGATE exp .)
    SEMICOL         reduce using rule 52 (predicateExp -> NEGATE exp .)
    $end            reduce using rule 52 (predicateExp -> NEGATE exp .)
    RPAREN          reduce using rule 52 (predicateExp -> NEGATE exp .)

  ! VALIDITY        [ shift and go to state 38 ]
  ! CONDITIONING    [ shift and go to state 39 ]
  ! MARGINAL        [ shift and go to state 40 ]
  ! CROSS           [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! PLUS            [ shift and go to state 43 ]
  ! PIPE            [ shift and go to state 44 ]
  ! STAR            [ shift and go to state 45 ]
  ! R_A_PAREN       [ shift and go to state 46 ]
  ! L_A_PAREN       [ shift and go to state 47 ]


state 64

    (53) channel -> L_A_PAREN matrice . COMMA domcod COMMA domcod R_A_PAREN

    COMMA           shift and go to state 97


state 65

    (54) matrice -> L_S_PAREN . righe R_S_PAREN
    (55) righe -> . riga COMMA righe
    (56) righe -> . riga
    (57) riga -> . L_S_PAREN riga_values R_S_PAREN

    L_S_PAREN       shift and go to state 98

    righe                          shift and go to state 99
    riga                           shift and go to state 100

state 66

    (64) builtin_function -> FLIP LPAREN . PROBABILITY_VALUE RPAREN

    PROBABILITY_VALUE shift and go to state 101


state 67

    (65) builtin_function -> UNIFORM_STATE LPAREN . domcod_values RPAREN
    (62) domcod_values -> . nameOrBool
    (63) domcod_values -> . nameOrBool COMMA domcod_values
    (29) nameOrBool -> . name
    (30) nameOrBool -> . string
    (31) nameOrBool -> . boolean
    (32) name -> . NAME
    (33) string -> . STRING
    (34) boolean -> . TRUE
    (35) boolean -> . FALSE

    NAME            shift and go to state 58
    STRING          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    domcod_values                  shift and go to state 102
    nameOrBool                     shift and go to state 103
    name                           shift and go to state 55
    string                         shift and go to state 56
    boolean                        shift and go to state 57

state 68

    (66) builtin_function -> RANDOM_STATE LPAREN . domcod_values RPAREN
    (62) domcod_values -> . nameOrBool
    (63) domcod_values -> . nameOrBool COMMA domcod_values
    (29) nameOrBool -> . name
    (30) nameOrBool -> . string
    (31) nameOrBool -> . boolean
    (32) name -> . NAME
    (33) string -> . STRING
    (34) boolean -> . TRUE
    (35) boolean -> . FALSE

    NAME            shift and go to state 58
    STRING          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    domcod_values                  shift and go to state 104
    nameOrBool                     shift and go to state 103
    name                           shift and go to state 55
    string                         shift and go to state 56
    boolean                        shift and go to state 57

state 69

    (67) builtin_function -> FALSITY LPAREN . domcod_values RPAREN
    (62) domcod_values -> . nameOrBool
    (63) domcod_values -> . nameOrBool COMMA domcod_values
    (29) nameOrBool -> . name
    (30) nameOrBool -> . string
    (31) nameOrBool -> . boolean
    (32) name -> . NAME
    (33) string -> . STRING
    (34) boolean -> . TRUE
    (35) boolean -> . FALSE

    NAME            shift and go to state 58
    STRING          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    domcod_values                  shift and go to state 105
    nameOrBool                     shift and go to state 103
    name                           shift and go to state 55
    string                         shift and go to state 56
    boolean                        shift and go to state 57

state 70

    (68) builtin_function -> COPY LPAREN . domcod_values RPAREN
    (62) domcod_values -> . nameOrBool
    (63) domcod_values -> . nameOrBool COMMA domcod_values
    (29) nameOrBool -> . name
    (30) nameOrBool -> . string
    (31) nameOrBool -> . boolean
    (32) name -> . NAME
    (33) string -> . STRING
    (34) boolean -> . TRUE
    (35) boolean -> . FALSE

    NAME            shift and go to state 58
    STRING          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    domcod_values                  shift and go to state 106
    nameOrBool                     shift and go to state 103
    name                           shift and go to state 55
    string                         shift and go to state 56
    boolean                        shift and go to state 57

state 71

    (69) builtin_function -> IDN LPAREN . domcod_values RPAREN
    (62) domcod_values -> . nameOrBool
    (63) domcod_values -> . nameOrBool COMMA domcod_values
    (29) nameOrBool -> . name
    (30) nameOrBool -> . string
    (31) nameOrBool -> . boolean
    (32) name -> . NAME
    (33) string -> . STRING
    (34) boolean -> . TRUE
    (35) boolean -> . FALSE

    NAME            shift and go to state 58
    STRING          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    domcod_values                  shift and go to state 107
    nameOrBool                     shift and go to state 103
    name                           shift and go to state 55
    string                         shift and go to state 56
    boolean                        shift and go to state 57

state 72

    (70) builtin_function -> SWAP LPAREN . domcod COMMA domcod RPAREN
    (61) domcod -> . L_S_PAREN domcod_values R_S_PAREN

    L_S_PAREN       shift and go to state 109

    domcod                         shift and go to state 108

state 73

    (71) builtin_function -> CPT LPAREN . riga_values RPAREN
    (58) riga_values -> . PROBABILITY_VALUE
    (59) riga_values -> . PROBABILITY_VALUE COMMA riga_values

    PROBABILITY_VALUE shift and go to state 111

    riga_values                    shift and go to state 110

state 74

    (72) builtin_function -> TRUTH LPAREN . domcod_values RPAREN
    (62) domcod_values -> . nameOrBool
    (63) domcod_values -> . nameOrBool COMMA domcod_values
    (29) nameOrBool -> . name
    (30) nameOrBool -> . string
    (31) nameOrBool -> . boolean
    (32) name -> . NAME
    (33) string -> . STRING
    (34) boolean -> . TRUE
    (35) boolean -> . FALSE

    NAME            shift and go to state 58
    STRING          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    domcod_values                  shift and go to state 112
    nameOrBool                     shift and go to state 103
    name                           shift and go to state 55
    string                         shift and go to state 56
    boolean                        shift and go to state 57

state 75

    (2) program -> stm SEMICOL program .

    $end            reduce using rule 2 (program -> stm SEMICOL program .)


state 76

    (3) stm -> PRINT LPAREN exp . RPAREN
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

    RPAREN          shift and go to state 113
    VALIDITY        shift and go to state 38
    CONDITIONING    shift and go to state 39
    MARGINAL        shift and go to state 40
    CROSS           shift and go to state 41
    AND             shift and go to state 42
    PLUS            shift and go to state 43
    PIPE            shift and go to state 44
    STAR            shift and go to state 45
    R_A_PAREN       shift and go to state 46
    L_A_PAREN       shift and go to state 47


state 77

    (6) exp -> LPAREN exp RPAREN .

    VALIDITY        reduce using rule 6 (exp -> LPAREN exp RPAREN .)
    CONDITIONING    reduce using rule 6 (exp -> LPAREN exp RPAREN .)
    MARGINAL        reduce using rule 6 (exp -> LPAREN exp RPAREN .)
    CROSS           reduce using rule 6 (exp -> LPAREN exp RPAREN .)
    AND             reduce using rule 6 (exp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 6 (exp -> LPAREN exp RPAREN .)
    PIPE            reduce using rule 6 (exp -> LPAREN exp RPAREN .)
    STAR            reduce using rule 6 (exp -> LPAREN exp RPAREN .)
    R_A_PAREN       reduce using rule 6 (exp -> LPAREN exp RPAREN .)
    L_A_PAREN       reduce using rule 6 (exp -> LPAREN exp RPAREN .)
    SEMICOL         reduce using rule 6 (exp -> LPAREN exp RPAREN .)
    $end            reduce using rule 6 (exp -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 6 (exp -> LPAREN exp RPAREN .)


state 78

    (21) validity -> exp VALIDITY exp .
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

  ! shift/reduce conflict for VALIDITY resolved as shift
  ! shift/reduce conflict for CONDITIONING resolved as shift
  ! shift/reduce conflict for MARGINAL resolved as shift
  ! shift/reduce conflict for CROSS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for R_A_PAREN resolved as shift
  ! shift/reduce conflict for L_A_PAREN resolved as shift
    SEMICOL         reduce using rule 21 (validity -> exp VALIDITY exp .)
    $end            reduce using rule 21 (validity -> exp VALIDITY exp .)
    RPAREN          reduce using rule 21 (validity -> exp VALIDITY exp .)
    VALIDITY        shift and go to state 38
    CONDITIONING    shift and go to state 39
    MARGINAL        shift and go to state 40
    CROSS           shift and go to state 41
    AND             shift and go to state 42
    PLUS            shift and go to state 43
    PIPE            shift and go to state 44
    STAR            shift and go to state 45
    R_A_PAREN       shift and go to state 46
    L_A_PAREN       shift and go to state 47

  ! VALIDITY        [ reduce using rule 21 (validity -> exp VALIDITY exp .) ]
  ! CONDITIONING    [ reduce using rule 21 (validity -> exp VALIDITY exp .) ]
  ! MARGINAL        [ reduce using rule 21 (validity -> exp VALIDITY exp .) ]
  ! CROSS           [ reduce using rule 21 (validity -> exp VALIDITY exp .) ]
  ! AND             [ reduce using rule 21 (validity -> exp VALIDITY exp .) ]
  ! PLUS            [ reduce using rule 21 (validity -> exp VALIDITY exp .) ]
  ! PIPE            [ reduce using rule 21 (validity -> exp VALIDITY exp .) ]
  ! STAR            [ reduce using rule 21 (validity -> exp VALIDITY exp .) ]
  ! R_A_PAREN       [ reduce using rule 21 (validity -> exp VALIDITY exp .) ]
  ! L_A_PAREN       [ reduce using rule 21 (validity -> exp VALIDITY exp .) ]


state 79

    (22) conditioning -> exp CONDITIONING exp .
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

    VALIDITY        reduce using rule 22 (conditioning -> exp CONDITIONING exp .)
    CONDITIONING    reduce using rule 22 (conditioning -> exp CONDITIONING exp .)
    MARGINAL        reduce using rule 22 (conditioning -> exp CONDITIONING exp .)
    CROSS           reduce using rule 22 (conditioning -> exp CONDITIONING exp .)
    STAR            reduce using rule 22 (conditioning -> exp CONDITIONING exp .)
    R_A_PAREN       reduce using rule 22 (conditioning -> exp CONDITIONING exp .)
    L_A_PAREN       reduce using rule 22 (conditioning -> exp CONDITIONING exp .)
    SEMICOL         reduce using rule 22 (conditioning -> exp CONDITIONING exp .)
    $end            reduce using rule 22 (conditioning -> exp CONDITIONING exp .)
    RPAREN          reduce using rule 22 (conditioning -> exp CONDITIONING exp .)
    AND             shift and go to state 42
    PLUS            shift and go to state 43
    PIPE            shift and go to state 44

  ! AND             [ reduce using rule 22 (conditioning -> exp CONDITIONING exp .) ]
  ! PLUS            [ reduce using rule 22 (conditioning -> exp CONDITIONING exp .) ]
  ! PIPE            [ reduce using rule 22 (conditioning -> exp CONDITIONING exp .) ]
  ! VALIDITY        [ shift and go to state 38 ]
  ! CONDITIONING    [ shift and go to state 39 ]
  ! MARGINAL        [ shift and go to state 40 ]
  ! CROSS           [ shift and go to state 41 ]
  ! STAR            [ shift and go to state 45 ]
  ! R_A_PAREN       [ shift and go to state 46 ]
  ! L_A_PAREN       [ shift and go to state 47 ]


state 80

    (38) stateExp -> exp MARGINAL dimensionSel .

    VALIDITY        reduce using rule 38 (stateExp -> exp MARGINAL dimensionSel .)
    CONDITIONING    reduce using rule 38 (stateExp -> exp MARGINAL dimensionSel .)
    MARGINAL        reduce using rule 38 (stateExp -> exp MARGINAL dimensionSel .)
    CROSS           reduce using rule 38 (stateExp -> exp MARGINAL dimensionSel .)
    AND             reduce using rule 38 (stateExp -> exp MARGINAL dimensionSel .)
    PLUS            reduce using rule 38 (stateExp -> exp MARGINAL dimensionSel .)
    PIPE            reduce using rule 38 (stateExp -> exp MARGINAL dimensionSel .)
    STAR            reduce using rule 38 (stateExp -> exp MARGINAL dimensionSel .)
    R_A_PAREN       reduce using rule 38 (stateExp -> exp MARGINAL dimensionSel .)
    L_A_PAREN       reduce using rule 38 (stateExp -> exp MARGINAL dimensionSel .)
    SEMICOL         reduce using rule 38 (stateExp -> exp MARGINAL dimensionSel .)
    $end            reduce using rule 38 (stateExp -> exp MARGINAL dimensionSel .)
    RPAREN          reduce using rule 38 (stateExp -> exp MARGINAL dimensionSel .)


state 81

    (39) dimensionSel -> L_S_PAREN . dimensionSelBody R_S_PAREN
    (40) dimensionSelBody -> . dimensionSelElem COMMA dimensionSelBody
    (41) dimensionSelBody -> . dimensionSelElem
    (42) dimensionSelElem -> . BIT

    BIT             shift and go to state 116

    dimensionSelBody               shift and go to state 114
    dimensionSelElem               shift and go to state 115

state 82

    (47) predicateExp -> exp CROSS exp .
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

    VALIDITY        reduce using rule 47 (predicateExp -> exp CROSS exp .)
    MARGINAL        reduce using rule 47 (predicateExp -> exp CROSS exp .)
    CROSS           reduce using rule 47 (predicateExp -> exp CROSS exp .)
    R_A_PAREN       reduce using rule 47 (predicateExp -> exp CROSS exp .)
    L_A_PAREN       reduce using rule 47 (predicateExp -> exp CROSS exp .)
    SEMICOL         reduce using rule 47 (predicateExp -> exp CROSS exp .)
    $end            reduce using rule 47 (predicateExp -> exp CROSS exp .)
    RPAREN          reduce using rule 47 (predicateExp -> exp CROSS exp .)
    CONDITIONING    shift and go to state 39
    AND             shift and go to state 42
    PLUS            shift and go to state 43
    PIPE            shift and go to state 44
    STAR            shift and go to state 45

  ! CONDITIONING    [ reduce using rule 47 (predicateExp -> exp CROSS exp .) ]
  ! AND             [ reduce using rule 47 (predicateExp -> exp CROSS exp .) ]
  ! PLUS            [ reduce using rule 47 (predicateExp -> exp CROSS exp .) ]
  ! PIPE            [ reduce using rule 47 (predicateExp -> exp CROSS exp .) ]
  ! STAR            [ reduce using rule 47 (predicateExp -> exp CROSS exp .) ]
  ! VALIDITY        [ shift and go to state 38 ]
  ! MARGINAL        [ shift and go to state 40 ]
  ! CROSS           [ shift and go to state 41 ]
  ! R_A_PAREN       [ shift and go to state 46 ]
  ! L_A_PAREN       [ shift and go to state 47 ]


state 83

    (48) predicateExp -> exp AND exp .
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

    VALIDITY        reduce using rule 48 (predicateExp -> exp AND exp .)
    CONDITIONING    reduce using rule 48 (predicateExp -> exp AND exp .)
    MARGINAL        reduce using rule 48 (predicateExp -> exp AND exp .)
    CROSS           reduce using rule 48 (predicateExp -> exp AND exp .)
    AND             reduce using rule 48 (predicateExp -> exp AND exp .)
    PIPE            reduce using rule 48 (predicateExp -> exp AND exp .)
    STAR            reduce using rule 48 (predicateExp -> exp AND exp .)
    R_A_PAREN       reduce using rule 48 (predicateExp -> exp AND exp .)
    L_A_PAREN       reduce using rule 48 (predicateExp -> exp AND exp .)
    SEMICOL         reduce using rule 48 (predicateExp -> exp AND exp .)
    $end            reduce using rule 48 (predicateExp -> exp AND exp .)
    RPAREN          reduce using rule 48 (predicateExp -> exp AND exp .)
    PLUS            shift and go to state 43

  ! PLUS            [ reduce using rule 48 (predicateExp -> exp AND exp .) ]
  ! VALIDITY        [ shift and go to state 38 ]
  ! CONDITIONING    [ shift and go to state 39 ]
  ! MARGINAL        [ shift and go to state 40 ]
  ! CROSS           [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! PIPE            [ shift and go to state 44 ]
  ! STAR            [ shift and go to state 45 ]
  ! R_A_PAREN       [ shift and go to state 46 ]
  ! L_A_PAREN       [ shift and go to state 47 ]


state 84

    (49) predicateExp -> exp PLUS exp .
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

    VALIDITY        reduce using rule 49 (predicateExp -> exp PLUS exp .)
    CONDITIONING    reduce using rule 49 (predicateExp -> exp PLUS exp .)
    MARGINAL        reduce using rule 49 (predicateExp -> exp PLUS exp .)
    CROSS           reduce using rule 49 (predicateExp -> exp PLUS exp .)
    AND             reduce using rule 49 (predicateExp -> exp PLUS exp .)
    PLUS            reduce using rule 49 (predicateExp -> exp PLUS exp .)
    PIPE            reduce using rule 49 (predicateExp -> exp PLUS exp .)
    STAR            reduce using rule 49 (predicateExp -> exp PLUS exp .)
    R_A_PAREN       reduce using rule 49 (predicateExp -> exp PLUS exp .)
    L_A_PAREN       reduce using rule 49 (predicateExp -> exp PLUS exp .)
    SEMICOL         reduce using rule 49 (predicateExp -> exp PLUS exp .)
    $end            reduce using rule 49 (predicateExp -> exp PLUS exp .)
    RPAREN          reduce using rule 49 (predicateExp -> exp PLUS exp .)

  ! VALIDITY        [ shift and go to state 38 ]
  ! CONDITIONING    [ shift and go to state 39 ]
  ! MARGINAL        [ shift and go to state 40 ]
  ! CROSS           [ shift and go to state 41 ]
  ! AND             [ shift and go to state 42 ]
  ! PLUS            [ shift and go to state 43 ]
  ! PIPE            [ shift and go to state 44 ]
  ! STAR            [ shift and go to state 45 ]
  ! R_A_PAREN       [ shift and go to state 46 ]
  ! L_A_PAREN       [ shift and go to state 47 ]


state 85

    (50) predicateExp -> exp PIPE exp .
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

    VALIDITY        reduce using rule 50 (predicateExp -> exp PIPE exp .)
    CONDITIONING    reduce using rule 50 (predicateExp -> exp PIPE exp .)
    MARGINAL        reduce using rule 50 (predicateExp -> exp PIPE exp .)
    CROSS           reduce using rule 50 (predicateExp -> exp PIPE exp .)
    PIPE            reduce using rule 50 (predicateExp -> exp PIPE exp .)
    STAR            reduce using rule 50 (predicateExp -> exp PIPE exp .)
    R_A_PAREN       reduce using rule 50 (predicateExp -> exp PIPE exp .)
    L_A_PAREN       reduce using rule 50 (predicateExp -> exp PIPE exp .)
    SEMICOL         reduce using rule 50 (predicateExp -> exp PIPE exp .)
    $end            reduce using rule 50 (predicateExp -> exp PIPE exp .)
    RPAREN          reduce using rule 50 (predicateExp -> exp PIPE exp .)
    AND             shift and go to state 42
    PLUS            shift and go to state 43

  ! AND             [ reduce using rule 50 (predicateExp -> exp PIPE exp .) ]
  ! PLUS            [ reduce using rule 50 (predicateExp -> exp PIPE exp .) ]
  ! VALIDITY        [ shift and go to state 38 ]
  ! CONDITIONING    [ shift and go to state 39 ]
  ! MARGINAL        [ shift and go to state 40 ]
  ! CROSS           [ shift and go to state 41 ]
  ! PIPE            [ shift and go to state 44 ]
  ! STAR            [ shift and go to state 45 ]
  ! R_A_PAREN       [ shift and go to state 46 ]
  ! L_A_PAREN       [ shift and go to state 47 ]


state 86

    (60) channelExp -> exp STAR exp .
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

    VALIDITY        reduce using rule 60 (channelExp -> exp STAR exp .)
    MARGINAL        reduce using rule 60 (channelExp -> exp STAR exp .)
    CROSS           reduce using rule 60 (channelExp -> exp STAR exp .)
    STAR            reduce using rule 60 (channelExp -> exp STAR exp .)
    R_A_PAREN       reduce using rule 60 (channelExp -> exp STAR exp .)
    L_A_PAREN       reduce using rule 60 (channelExp -> exp STAR exp .)
    SEMICOL         reduce using rule 60 (channelExp -> exp STAR exp .)
    $end            reduce using rule 60 (channelExp -> exp STAR exp .)
    RPAREN          reduce using rule 60 (channelExp -> exp STAR exp .)
    CONDITIONING    shift and go to state 39
    AND             shift and go to state 42
    PLUS            shift and go to state 43
    PIPE            shift and go to state 44

  ! CONDITIONING    [ reduce using rule 60 (channelExp -> exp STAR exp .) ]
  ! AND             [ reduce using rule 60 (channelExp -> exp STAR exp .) ]
  ! PLUS            [ reduce using rule 60 (channelExp -> exp STAR exp .) ]
  ! PIPE            [ reduce using rule 60 (channelExp -> exp STAR exp .) ]
  ! VALIDITY        [ shift and go to state 38 ]
  ! MARGINAL        [ shift and go to state 40 ]
  ! CROSS           [ shift and go to state 41 ]
  ! STAR            [ shift and go to state 45 ]
  ! R_A_PAREN       [ shift and go to state 46 ]
  ! L_A_PAREN       [ shift and go to state 47 ]


state 87

    (23) stateTransformation -> exp R_A_PAREN exp .
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

    VALIDITY        reduce using rule 23 (stateTransformation -> exp R_A_PAREN exp .)
    MARGINAL        reduce using rule 23 (stateTransformation -> exp R_A_PAREN exp .)
    R_A_PAREN       reduce using rule 23 (stateTransformation -> exp R_A_PAREN exp .)
    L_A_PAREN       reduce using rule 23 (stateTransformation -> exp R_A_PAREN exp .)
    SEMICOL         reduce using rule 23 (stateTransformation -> exp R_A_PAREN exp .)
    $end            reduce using rule 23 (stateTransformation -> exp R_A_PAREN exp .)
    RPAREN          reduce using rule 23 (stateTransformation -> exp R_A_PAREN exp .)
    CONDITIONING    shift and go to state 39
    CROSS           shift and go to state 41
    AND             shift and go to state 42
    PLUS            shift and go to state 43
    PIPE            shift and go to state 44
    STAR            shift and go to state 45

  ! CONDITIONING    [ reduce using rule 23 (stateTransformation -> exp R_A_PAREN exp .) ]
  ! CROSS           [ reduce using rule 23 (stateTransformation -> exp R_A_PAREN exp .) ]
  ! AND             [ reduce using rule 23 (stateTransformation -> exp R_A_PAREN exp .) ]
  ! PLUS            [ reduce using rule 23 (stateTransformation -> exp R_A_PAREN exp .) ]
  ! PIPE            [ reduce using rule 23 (stateTransformation -> exp R_A_PAREN exp .) ]
  ! STAR            [ reduce using rule 23 (stateTransformation -> exp R_A_PAREN exp .) ]
  ! VALIDITY        [ shift and go to state 38 ]
  ! MARGINAL        [ shift and go to state 40 ]
  ! R_A_PAREN       [ shift and go to state 46 ]
  ! L_A_PAREN       [ shift and go to state 47 ]


state 88

    (24) predicateTransformation -> exp L_A_PAREN exp .
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

    VALIDITY        reduce using rule 24 (predicateTransformation -> exp L_A_PAREN exp .)
    MARGINAL        reduce using rule 24 (predicateTransformation -> exp L_A_PAREN exp .)
    L_A_PAREN       reduce using rule 24 (predicateTransformation -> exp L_A_PAREN exp .)
    SEMICOL         reduce using rule 24 (predicateTransformation -> exp L_A_PAREN exp .)
    $end            reduce using rule 24 (predicateTransformation -> exp L_A_PAREN exp .)
    RPAREN          reduce using rule 24 (predicateTransformation -> exp L_A_PAREN exp .)
    CONDITIONING    shift and go to state 39
    CROSS           shift and go to state 41
    AND             shift and go to state 42
    PLUS            shift and go to state 43
    PIPE            shift and go to state 44
    STAR            shift and go to state 45
    R_A_PAREN       shift and go to state 46

  ! CONDITIONING    [ reduce using rule 24 (predicateTransformation -> exp L_A_PAREN exp .) ]
  ! CROSS           [ reduce using rule 24 (predicateTransformation -> exp L_A_PAREN exp .) ]
  ! AND             [ reduce using rule 24 (predicateTransformation -> exp L_A_PAREN exp .) ]
  ! PLUS            [ reduce using rule 24 (predicateTransformation -> exp L_A_PAREN exp .) ]
  ! PIPE            [ reduce using rule 24 (predicateTransformation -> exp L_A_PAREN exp .) ]
  ! STAR            [ reduce using rule 24 (predicateTransformation -> exp L_A_PAREN exp .) ]
  ! R_A_PAREN       [ reduce using rule 24 (predicateTransformation -> exp L_A_PAREN exp .) ]
  ! VALIDITY        [ shift and go to state 38 ]
  ! MARGINAL        [ shift and go to state 40 ]
  ! L_A_PAREN       [ shift and go to state 47 ]


state 89

    (5) stm -> varStore EQUALS exp .
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

    SEMICOL         reduce using rule 5 (stm -> varStore EQUALS exp .)
    $end            reduce using rule 5 (stm -> varStore EQUALS exp .)
    VALIDITY        shift and go to state 38
    CONDITIONING    shift and go to state 39
    MARGINAL        shift and go to state 40
    CROSS           shift and go to state 41
    AND             shift and go to state 42
    PLUS            shift and go to state 43
    PIPE            shift and go to state 44
    STAR            shift and go to state 45
    R_A_PAREN       shift and go to state 46
    L_A_PAREN       shift and go to state 47


state 90

    (25) state -> L_S_PAREN stateBody R_S_PAREN .

    VALIDITY        reduce using rule 25 (state -> L_S_PAREN stateBody R_S_PAREN .)
    CONDITIONING    reduce using rule 25 (state -> L_S_PAREN stateBody R_S_PAREN .)
    MARGINAL        reduce using rule 25 (state -> L_S_PAREN stateBody R_S_PAREN .)
    CROSS           reduce using rule 25 (state -> L_S_PAREN stateBody R_S_PAREN .)
    AND             reduce using rule 25 (state -> L_S_PAREN stateBody R_S_PAREN .)
    PLUS            reduce using rule 25 (state -> L_S_PAREN stateBody R_S_PAREN .)
    PIPE            reduce using rule 25 (state -> L_S_PAREN stateBody R_S_PAREN .)
    STAR            reduce using rule 25 (state -> L_S_PAREN stateBody R_S_PAREN .)
    R_A_PAREN       reduce using rule 25 (state -> L_S_PAREN stateBody R_S_PAREN .)
    L_A_PAREN       reduce using rule 25 (state -> L_S_PAREN stateBody R_S_PAREN .)
    SEMICOL         reduce using rule 25 (state -> L_S_PAREN stateBody R_S_PAREN .)
    $end            reduce using rule 25 (state -> L_S_PAREN stateBody R_S_PAREN .)
    RPAREN          reduce using rule 25 (state -> L_S_PAREN stateBody R_S_PAREN .)


state 91

    (26) stateBody -> stateElem PLUS . stateBody
    (26) stateBody -> . stateElem PLUS stateBody
    (27) stateBody -> . stateElem
    (28) stateElem -> . PROBABILITY_VALUE PIPE nameOrBool optionKET

    PROBABILITY_VALUE shift and go to state 51

    stateElem                      shift and go to state 50
    stateBody                      shift and go to state 117

state 92

    (28) stateElem -> PROBABILITY_VALUE PIPE . nameOrBool optionKET
    (29) nameOrBool -> . name
    (30) nameOrBool -> . string
    (31) nameOrBool -> . boolean
    (32) name -> . NAME
    (33) string -> . STRING
    (34) boolean -> . TRUE
    (35) boolean -> . FALSE

    NAME            shift and go to state 58
    STRING          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    nameOrBool                     shift and go to state 118
    name                           shift and go to state 55
    string                         shift and go to state 56
    boolean                        shift and go to state 57

state 93

    (43) predicate -> L_B_PAREN predicateBody R_B_PAREN .

    VALIDITY        reduce using rule 43 (predicate -> L_B_PAREN predicateBody R_B_PAREN .)
    CONDITIONING    reduce using rule 43 (predicate -> L_B_PAREN predicateBody R_B_PAREN .)
    MARGINAL        reduce using rule 43 (predicate -> L_B_PAREN predicateBody R_B_PAREN .)
    CROSS           reduce using rule 43 (predicate -> L_B_PAREN predicateBody R_B_PAREN .)
    AND             reduce using rule 43 (predicate -> L_B_PAREN predicateBody R_B_PAREN .)
    PLUS            reduce using rule 43 (predicate -> L_B_PAREN predicateBody R_B_PAREN .)
    PIPE            reduce using rule 43 (predicate -> L_B_PAREN predicateBody R_B_PAREN .)
    STAR            reduce using rule 43 (predicate -> L_B_PAREN predicateBody R_B_PAREN .)
    R_A_PAREN       reduce using rule 43 (predicate -> L_B_PAREN predicateBody R_B_PAREN .)
    L_A_PAREN       reduce using rule 43 (predicate -> L_B_PAREN predicateBody R_B_PAREN .)
    SEMICOL         reduce using rule 43 (predicate -> L_B_PAREN predicateBody R_B_PAREN .)
    $end            reduce using rule 43 (predicate -> L_B_PAREN predicateBody R_B_PAREN .)
    RPAREN          reduce using rule 43 (predicate -> L_B_PAREN predicateBody R_B_PAREN .)


state 94

    (44) predicateBody -> predicateElem COMMA . predicateBody
    (44) predicateBody -> . predicateElem COMMA predicateBody
    (45) predicateBody -> . predicateElem
    (46) predicateElem -> . nameOrBool COLON PROBABILITY_VALUE
    (29) nameOrBool -> . name
    (30) nameOrBool -> . string
    (31) nameOrBool -> . boolean
    (32) name -> . NAME
    (33) string -> . STRING
    (34) boolean -> . TRUE
    (35) boolean -> . FALSE

    NAME            shift and go to state 58
    STRING          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    predicateElem                  shift and go to state 53
    predicateBody                  shift and go to state 119
    nameOrBool                     shift and go to state 54
    name                           shift and go to state 55
    string                         shift and go to state 56
    boolean                        shift and go to state 57

state 95

    (46) predicateElem -> nameOrBool COLON . PROBABILITY_VALUE

    PROBABILITY_VALUE shift and go to state 120


state 96

    (51) predicateExp -> PROBABILITY_VALUE STAR exp .
    (21) validity -> exp . VALIDITY exp
    (22) conditioning -> exp . CONDITIONING exp
    (38) stateExp -> exp . MARGINAL dimensionSel
    (47) predicateExp -> exp . CROSS exp
    (48) predicateExp -> exp . AND exp
    (49) predicateExp -> exp . PLUS exp
    (50) predicateExp -> exp . PIPE exp
    (60) channelExp -> exp . STAR exp
    (23) stateTransformation -> exp . R_A_PAREN exp
    (24) predicateTransformation -> exp . L_A_PAREN exp

    VALIDITY        reduce using rule 51 (predicateExp -> PROBABILITY_VALUE STAR exp .)
    MARGINAL        reduce using rule 51 (predicateExp -> PROBABILITY_VALUE STAR exp .)
    CROSS           reduce using rule 51 (predicateExp -> PROBABILITY_VALUE STAR exp .)
    STAR            reduce using rule 51 (predicateExp -> PROBABILITY_VALUE STAR exp .)
    R_A_PAREN       reduce using rule 51 (predicateExp -> PROBABILITY_VALUE STAR exp .)
    L_A_PAREN       reduce using rule 51 (predicateExp -> PROBABILITY_VALUE STAR exp .)
    SEMICOL         reduce using rule 51 (predicateExp -> PROBABILITY_VALUE STAR exp .)
    $end            reduce using rule 51 (predicateExp -> PROBABILITY_VALUE STAR exp .)
    RPAREN          reduce using rule 51 (predicateExp -> PROBABILITY_VALUE STAR exp .)
    CONDITIONING    shift and go to state 39
    AND             shift and go to state 42
    PLUS            shift and go to state 43
    PIPE            shift and go to state 44

  ! CONDITIONING    [ reduce using rule 51 (predicateExp -> PROBABILITY_VALUE STAR exp .) ]
  ! AND             [ reduce using rule 51 (predicateExp -> PROBABILITY_VALUE STAR exp .) ]
  ! PLUS            [ reduce using rule 51 (predicateExp -> PROBABILITY_VALUE STAR exp .) ]
  ! PIPE            [ reduce using rule 51 (predicateExp -> PROBABILITY_VALUE STAR exp .) ]
  ! VALIDITY        [ shift and go to state 38 ]
  ! MARGINAL        [ shift and go to state 40 ]
  ! CROSS           [ shift and go to state 41 ]
  ! STAR            [ shift and go to state 45 ]
  ! R_A_PAREN       [ shift and go to state 46 ]
  ! L_A_PAREN       [ shift and go to state 47 ]


state 97

    (53) channel -> L_A_PAREN matrice COMMA . domcod COMMA domcod R_A_PAREN
    (61) domcod -> . L_S_PAREN domcod_values R_S_PAREN

    L_S_PAREN       shift and go to state 109

    domcod                         shift and go to state 121

state 98

    (57) riga -> L_S_PAREN . riga_values R_S_PAREN
    (58) riga_values -> . PROBABILITY_VALUE
    (59) riga_values -> . PROBABILITY_VALUE COMMA riga_values

    PROBABILITY_VALUE shift and go to state 111

    riga_values                    shift and go to state 122

state 99

    (54) matrice -> L_S_PAREN righe . R_S_PAREN

    R_S_PAREN       shift and go to state 123


state 100

    (55) righe -> riga . COMMA righe
    (56) righe -> riga .

    COMMA           shift and go to state 124
    R_S_PAREN       reduce using rule 56 (righe -> riga .)


state 101

    (64) builtin_function -> FLIP LPAREN PROBABILITY_VALUE . RPAREN

    RPAREN          shift and go to state 125


state 102

    (65) builtin_function -> UNIFORM_STATE LPAREN domcod_values . RPAREN

    RPAREN          shift and go to state 126


state 103

    (62) domcod_values -> nameOrBool .
    (63) domcod_values -> nameOrBool . COMMA domcod_values

    RPAREN          reduce using rule 62 (domcod_values -> nameOrBool .)
    R_S_PAREN       reduce using rule 62 (domcod_values -> nameOrBool .)
    COMMA           shift and go to state 127


state 104

    (66) builtin_function -> RANDOM_STATE LPAREN domcod_values . RPAREN

    RPAREN          shift and go to state 128


state 105

    (67) builtin_function -> FALSITY LPAREN domcod_values . RPAREN

    RPAREN          shift and go to state 129


state 106

    (68) builtin_function -> COPY LPAREN domcod_values . RPAREN

    RPAREN          shift and go to state 130


state 107

    (69) builtin_function -> IDN LPAREN domcod_values . RPAREN

    RPAREN          shift and go to state 131


state 108

    (70) builtin_function -> SWAP LPAREN domcod . COMMA domcod RPAREN

    COMMA           shift and go to state 132


state 109

    (61) domcod -> L_S_PAREN . domcod_values R_S_PAREN
    (62) domcod_values -> . nameOrBool
    (63) domcod_values -> . nameOrBool COMMA domcod_values
    (29) nameOrBool -> . name
    (30) nameOrBool -> . string
    (31) nameOrBool -> . boolean
    (32) name -> . NAME
    (33) string -> . STRING
    (34) boolean -> . TRUE
    (35) boolean -> . FALSE

    NAME            shift and go to state 58
    STRING          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    domcod_values                  shift and go to state 133
    nameOrBool                     shift and go to state 103
    name                           shift and go to state 55
    string                         shift and go to state 56
    boolean                        shift and go to state 57

state 110

    (71) builtin_function -> CPT LPAREN riga_values . RPAREN

    RPAREN          shift and go to state 134


state 111

    (58) riga_values -> PROBABILITY_VALUE .
    (59) riga_values -> PROBABILITY_VALUE . COMMA riga_values

    RPAREN          reduce using rule 58 (riga_values -> PROBABILITY_VALUE .)
    R_S_PAREN       reduce using rule 58 (riga_values -> PROBABILITY_VALUE .)
    COMMA           shift and go to state 135


state 112

    (72) builtin_function -> TRUTH LPAREN domcod_values . RPAREN

    RPAREN          shift and go to state 136


state 113

    (3) stm -> PRINT LPAREN exp RPAREN .

    SEMICOL         reduce using rule 3 (stm -> PRINT LPAREN exp RPAREN .)
    $end            reduce using rule 3 (stm -> PRINT LPAREN exp RPAREN .)


state 114

    (39) dimensionSel -> L_S_PAREN dimensionSelBody . R_S_PAREN

    R_S_PAREN       shift and go to state 137


state 115

    (40) dimensionSelBody -> dimensionSelElem . COMMA dimensionSelBody
    (41) dimensionSelBody -> dimensionSelElem .

    COMMA           shift and go to state 138
    R_S_PAREN       reduce using rule 41 (dimensionSelBody -> dimensionSelElem .)


state 116

    (42) dimensionSelElem -> BIT .

    COMMA           reduce using rule 42 (dimensionSelElem -> BIT .)
    R_S_PAREN       reduce using rule 42 (dimensionSelElem -> BIT .)


state 117

    (26) stateBody -> stateElem PLUS stateBody .

    R_S_PAREN       reduce using rule 26 (stateBody -> stateElem PLUS stateBody .)


state 118

    (28) stateElem -> PROBABILITY_VALUE PIPE nameOrBool . optionKET
    (36) optionKET -> . KET
    (37) optionKET -> . empty
    (73) empty -> .

    KET             shift and go to state 140
    PLUS            reduce using rule 73 (empty -> .)
    R_S_PAREN       reduce using rule 73 (empty -> .)

    optionKET                      shift and go to state 139
    empty                          shift and go to state 141

state 119

    (44) predicateBody -> predicateElem COMMA predicateBody .

    R_B_PAREN       reduce using rule 44 (predicateBody -> predicateElem COMMA predicateBody .)


state 120

    (46) predicateElem -> nameOrBool COLON PROBABILITY_VALUE .

    COMMA           reduce using rule 46 (predicateElem -> nameOrBool COLON PROBABILITY_VALUE .)
    R_B_PAREN       reduce using rule 46 (predicateElem -> nameOrBool COLON PROBABILITY_VALUE .)


state 121

    (53) channel -> L_A_PAREN matrice COMMA domcod . COMMA domcod R_A_PAREN

    COMMA           shift and go to state 142


state 122

    (57) riga -> L_S_PAREN riga_values . R_S_PAREN

    R_S_PAREN       shift and go to state 143


state 123

    (54) matrice -> L_S_PAREN righe R_S_PAREN .

    COMMA           reduce using rule 54 (matrice -> L_S_PAREN righe R_S_PAREN .)


state 124

    (55) righe -> riga COMMA . righe
    (55) righe -> . riga COMMA righe
    (56) righe -> . riga
    (57) riga -> . L_S_PAREN riga_values R_S_PAREN

    L_S_PAREN       shift and go to state 98

    riga                           shift and go to state 100
    righe                          shift and go to state 144

state 125

    (64) builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN .

    VALIDITY        reduce using rule 64 (builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN .)
    CONDITIONING    reduce using rule 64 (builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN .)
    MARGINAL        reduce using rule 64 (builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN .)
    CROSS           reduce using rule 64 (builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN .)
    AND             reduce using rule 64 (builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN .)
    PLUS            reduce using rule 64 (builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN .)
    PIPE            reduce using rule 64 (builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN .)
    STAR            reduce using rule 64 (builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN .)
    R_A_PAREN       reduce using rule 64 (builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN .)
    L_A_PAREN       reduce using rule 64 (builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN .)
    SEMICOL         reduce using rule 64 (builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN .)
    $end            reduce using rule 64 (builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN .)
    RPAREN          reduce using rule 64 (builtin_function -> FLIP LPAREN PROBABILITY_VALUE RPAREN .)


state 126

    (65) builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN .

    VALIDITY        reduce using rule 65 (builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN .)
    CONDITIONING    reduce using rule 65 (builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN .)
    MARGINAL        reduce using rule 65 (builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN .)
    CROSS           reduce using rule 65 (builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN .)
    AND             reduce using rule 65 (builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN .)
    PLUS            reduce using rule 65 (builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN .)
    PIPE            reduce using rule 65 (builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN .)
    STAR            reduce using rule 65 (builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN .)
    R_A_PAREN       reduce using rule 65 (builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN .)
    L_A_PAREN       reduce using rule 65 (builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN .)
    SEMICOL         reduce using rule 65 (builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN .)
    $end            reduce using rule 65 (builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN .)
    RPAREN          reduce using rule 65 (builtin_function -> UNIFORM_STATE LPAREN domcod_values RPAREN .)


state 127

    (63) domcod_values -> nameOrBool COMMA . domcod_values
    (62) domcod_values -> . nameOrBool
    (63) domcod_values -> . nameOrBool COMMA domcod_values
    (29) nameOrBool -> . name
    (30) nameOrBool -> . string
    (31) nameOrBool -> . boolean
    (32) name -> . NAME
    (33) string -> . STRING
    (34) boolean -> . TRUE
    (35) boolean -> . FALSE

    NAME            shift and go to state 58
    STRING          shift and go to state 59
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    nameOrBool                     shift and go to state 103
    domcod_values                  shift and go to state 145
    name                           shift and go to state 55
    string                         shift and go to state 56
    boolean                        shift and go to state 57

state 128

    (66) builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN .

    VALIDITY        reduce using rule 66 (builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN .)
    CONDITIONING    reduce using rule 66 (builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN .)
    MARGINAL        reduce using rule 66 (builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN .)
    CROSS           reduce using rule 66 (builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN .)
    AND             reduce using rule 66 (builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN .)
    PLUS            reduce using rule 66 (builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN .)
    PIPE            reduce using rule 66 (builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN .)
    STAR            reduce using rule 66 (builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN .)
    R_A_PAREN       reduce using rule 66 (builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN .)
    L_A_PAREN       reduce using rule 66 (builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN .)
    SEMICOL         reduce using rule 66 (builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN .)
    $end            reduce using rule 66 (builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN .)
    RPAREN          reduce using rule 66 (builtin_function -> RANDOM_STATE LPAREN domcod_values RPAREN .)


state 129

    (67) builtin_function -> FALSITY LPAREN domcod_values RPAREN .

    VALIDITY        reduce using rule 67 (builtin_function -> FALSITY LPAREN domcod_values RPAREN .)
    CONDITIONING    reduce using rule 67 (builtin_function -> FALSITY LPAREN domcod_values RPAREN .)
    MARGINAL        reduce using rule 67 (builtin_function -> FALSITY LPAREN domcod_values RPAREN .)
    CROSS           reduce using rule 67 (builtin_function -> FALSITY LPAREN domcod_values RPAREN .)
    AND             reduce using rule 67 (builtin_function -> FALSITY LPAREN domcod_values RPAREN .)
    PLUS            reduce using rule 67 (builtin_function -> FALSITY LPAREN domcod_values RPAREN .)
    PIPE            reduce using rule 67 (builtin_function -> FALSITY LPAREN domcod_values RPAREN .)
    STAR            reduce using rule 67 (builtin_function -> FALSITY LPAREN domcod_values RPAREN .)
    R_A_PAREN       reduce using rule 67 (builtin_function -> FALSITY LPAREN domcod_values RPAREN .)
    L_A_PAREN       reduce using rule 67 (builtin_function -> FALSITY LPAREN domcod_values RPAREN .)
    SEMICOL         reduce using rule 67 (builtin_function -> FALSITY LPAREN domcod_values RPAREN .)
    $end            reduce using rule 67 (builtin_function -> FALSITY LPAREN domcod_values RPAREN .)
    RPAREN          reduce using rule 67 (builtin_function -> FALSITY LPAREN domcod_values RPAREN .)


state 130

    (68) builtin_function -> COPY LPAREN domcod_values RPAREN .

    VALIDITY        reduce using rule 68 (builtin_function -> COPY LPAREN domcod_values RPAREN .)
    CONDITIONING    reduce using rule 68 (builtin_function -> COPY LPAREN domcod_values RPAREN .)
    MARGINAL        reduce using rule 68 (builtin_function -> COPY LPAREN domcod_values RPAREN .)
    CROSS           reduce using rule 68 (builtin_function -> COPY LPAREN domcod_values RPAREN .)
    AND             reduce using rule 68 (builtin_function -> COPY LPAREN domcod_values RPAREN .)
    PLUS            reduce using rule 68 (builtin_function -> COPY LPAREN domcod_values RPAREN .)
    PIPE            reduce using rule 68 (builtin_function -> COPY LPAREN domcod_values RPAREN .)
    STAR            reduce using rule 68 (builtin_function -> COPY LPAREN domcod_values RPAREN .)
    R_A_PAREN       reduce using rule 68 (builtin_function -> COPY LPAREN domcod_values RPAREN .)
    L_A_PAREN       reduce using rule 68 (builtin_function -> COPY LPAREN domcod_values RPAREN .)
    SEMICOL         reduce using rule 68 (builtin_function -> COPY LPAREN domcod_values RPAREN .)
    $end            reduce using rule 68 (builtin_function -> COPY LPAREN domcod_values RPAREN .)
    RPAREN          reduce using rule 68 (builtin_function -> COPY LPAREN domcod_values RPAREN .)


state 131

    (69) builtin_function -> IDN LPAREN domcod_values RPAREN .

    VALIDITY        reduce using rule 69 (builtin_function -> IDN LPAREN domcod_values RPAREN .)
    CONDITIONING    reduce using rule 69 (builtin_function -> IDN LPAREN domcod_values RPAREN .)
    MARGINAL        reduce using rule 69 (builtin_function -> IDN LPAREN domcod_values RPAREN .)
    CROSS           reduce using rule 69 (builtin_function -> IDN LPAREN domcod_values RPAREN .)
    AND             reduce using rule 69 (builtin_function -> IDN LPAREN domcod_values RPAREN .)
    PLUS            reduce using rule 69 (builtin_function -> IDN LPAREN domcod_values RPAREN .)
    PIPE            reduce using rule 69 (builtin_function -> IDN LPAREN domcod_values RPAREN .)
    STAR            reduce using rule 69 (builtin_function -> IDN LPAREN domcod_values RPAREN .)
    R_A_PAREN       reduce using rule 69 (builtin_function -> IDN LPAREN domcod_values RPAREN .)
    L_A_PAREN       reduce using rule 69 (builtin_function -> IDN LPAREN domcod_values RPAREN .)
    SEMICOL         reduce using rule 69 (builtin_function -> IDN LPAREN domcod_values RPAREN .)
    $end            reduce using rule 69 (builtin_function -> IDN LPAREN domcod_values RPAREN .)
    RPAREN          reduce using rule 69 (builtin_function -> IDN LPAREN domcod_values RPAREN .)


state 132

    (70) builtin_function -> SWAP LPAREN domcod COMMA . domcod RPAREN
    (61) domcod -> . L_S_PAREN domcod_values R_S_PAREN

    L_S_PAREN       shift and go to state 109

    domcod                         shift and go to state 146

state 133

    (61) domcod -> L_S_PAREN domcod_values . R_S_PAREN

    R_S_PAREN       shift and go to state 147


state 134

    (71) builtin_function -> CPT LPAREN riga_values RPAREN .

    VALIDITY        reduce using rule 71 (builtin_function -> CPT LPAREN riga_values RPAREN .)
    CONDITIONING    reduce using rule 71 (builtin_function -> CPT LPAREN riga_values RPAREN .)
    MARGINAL        reduce using rule 71 (builtin_function -> CPT LPAREN riga_values RPAREN .)
    CROSS           reduce using rule 71 (builtin_function -> CPT LPAREN riga_values RPAREN .)
    AND             reduce using rule 71 (builtin_function -> CPT LPAREN riga_values RPAREN .)
    PLUS            reduce using rule 71 (builtin_function -> CPT LPAREN riga_values RPAREN .)
    PIPE            reduce using rule 71 (builtin_function -> CPT LPAREN riga_values RPAREN .)
    STAR            reduce using rule 71 (builtin_function -> CPT LPAREN riga_values RPAREN .)
    R_A_PAREN       reduce using rule 71 (builtin_function -> CPT LPAREN riga_values RPAREN .)
    L_A_PAREN       reduce using rule 71 (builtin_function -> CPT LPAREN riga_values RPAREN .)
    SEMICOL         reduce using rule 71 (builtin_function -> CPT LPAREN riga_values RPAREN .)
    $end            reduce using rule 71 (builtin_function -> CPT LPAREN riga_values RPAREN .)
    RPAREN          reduce using rule 71 (builtin_function -> CPT LPAREN riga_values RPAREN .)


state 135

    (59) riga_values -> PROBABILITY_VALUE COMMA . riga_values
    (58) riga_values -> . PROBABILITY_VALUE
    (59) riga_values -> . PROBABILITY_VALUE COMMA riga_values

    PROBABILITY_VALUE shift and go to state 111

    riga_values                    shift and go to state 148

state 136

    (72) builtin_function -> TRUTH LPAREN domcod_values RPAREN .

    VALIDITY        reduce using rule 72 (builtin_function -> TRUTH LPAREN domcod_values RPAREN .)
    CONDITIONING    reduce using rule 72 (builtin_function -> TRUTH LPAREN domcod_values RPAREN .)
    MARGINAL        reduce using rule 72 (builtin_function -> TRUTH LPAREN domcod_values RPAREN .)
    CROSS           reduce using rule 72 (builtin_function -> TRUTH LPAREN domcod_values RPAREN .)
    AND             reduce using rule 72 (builtin_function -> TRUTH LPAREN domcod_values RPAREN .)
    PLUS            reduce using rule 72 (builtin_function -> TRUTH LPAREN domcod_values RPAREN .)
    PIPE            reduce using rule 72 (builtin_function -> TRUTH LPAREN domcod_values RPAREN .)
    STAR            reduce using rule 72 (builtin_function -> TRUTH LPAREN domcod_values RPAREN .)
    R_A_PAREN       reduce using rule 72 (builtin_function -> TRUTH LPAREN domcod_values RPAREN .)
    L_A_PAREN       reduce using rule 72 (builtin_function -> TRUTH LPAREN domcod_values RPAREN .)
    SEMICOL         reduce using rule 72 (builtin_function -> TRUTH LPAREN domcod_values RPAREN .)
    $end            reduce using rule 72 (builtin_function -> TRUTH LPAREN domcod_values RPAREN .)
    RPAREN          reduce using rule 72 (builtin_function -> TRUTH LPAREN domcod_values RPAREN .)


state 137

    (39) dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN .

    VALIDITY        reduce using rule 39 (dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN .)
    CONDITIONING    reduce using rule 39 (dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN .)
    MARGINAL        reduce using rule 39 (dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN .)
    CROSS           reduce using rule 39 (dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN .)
    AND             reduce using rule 39 (dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN .)
    PLUS            reduce using rule 39 (dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN .)
    PIPE            reduce using rule 39 (dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN .)
    STAR            reduce using rule 39 (dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN .)
    R_A_PAREN       reduce using rule 39 (dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN .)
    L_A_PAREN       reduce using rule 39 (dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN .)
    SEMICOL         reduce using rule 39 (dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN .)
    $end            reduce using rule 39 (dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN .)
    RPAREN          reduce using rule 39 (dimensionSel -> L_S_PAREN dimensionSelBody R_S_PAREN .)


state 138

    (40) dimensionSelBody -> dimensionSelElem COMMA . dimensionSelBody
    (40) dimensionSelBody -> . dimensionSelElem COMMA dimensionSelBody
    (41) dimensionSelBody -> . dimensionSelElem
    (42) dimensionSelElem -> . BIT

    BIT             shift and go to state 116

    dimensionSelElem               shift and go to state 115
    dimensionSelBody               shift and go to state 149

state 139

    (28) stateElem -> PROBABILITY_VALUE PIPE nameOrBool optionKET .

    PLUS            reduce using rule 28 (stateElem -> PROBABILITY_VALUE PIPE nameOrBool optionKET .)
    R_S_PAREN       reduce using rule 28 (stateElem -> PROBABILITY_VALUE PIPE nameOrBool optionKET .)


state 140

    (36) optionKET -> KET .

    PLUS            reduce using rule 36 (optionKET -> KET .)
    R_S_PAREN       reduce using rule 36 (optionKET -> KET .)


state 141

    (37) optionKET -> empty .

    PLUS            reduce using rule 37 (optionKET -> empty .)
    R_S_PAREN       reduce using rule 37 (optionKET -> empty .)


state 142

    (53) channel -> L_A_PAREN matrice COMMA domcod COMMA . domcod R_A_PAREN
    (61) domcod -> . L_S_PAREN domcod_values R_S_PAREN

    L_S_PAREN       shift and go to state 109

    domcod                         shift and go to state 150

state 143

    (57) riga -> L_S_PAREN riga_values R_S_PAREN .

    COMMA           reduce using rule 57 (riga -> L_S_PAREN riga_values R_S_PAREN .)
    R_S_PAREN       reduce using rule 57 (riga -> L_S_PAREN riga_values R_S_PAREN .)


state 144

    (55) righe -> riga COMMA righe .

    R_S_PAREN       reduce using rule 55 (righe -> riga COMMA righe .)


state 145

    (63) domcod_values -> nameOrBool COMMA domcod_values .

    RPAREN          reduce using rule 63 (domcod_values -> nameOrBool COMMA domcod_values .)
    R_S_PAREN       reduce using rule 63 (domcod_values -> nameOrBool COMMA domcod_values .)


state 146

    (70) builtin_function -> SWAP LPAREN domcod COMMA domcod . RPAREN

    RPAREN          shift and go to state 151


state 147

    (61) domcod -> L_S_PAREN domcod_values R_S_PAREN .

    COMMA           reduce using rule 61 (domcod -> L_S_PAREN domcod_values R_S_PAREN .)
    RPAREN          reduce using rule 61 (domcod -> L_S_PAREN domcod_values R_S_PAREN .)
    R_A_PAREN       reduce using rule 61 (domcod -> L_S_PAREN domcod_values R_S_PAREN .)


state 148

    (59) riga_values -> PROBABILITY_VALUE COMMA riga_values .

    RPAREN          reduce using rule 59 (riga_values -> PROBABILITY_VALUE COMMA riga_values .)
    R_S_PAREN       reduce using rule 59 (riga_values -> PROBABILITY_VALUE COMMA riga_values .)


state 149

    (40) dimensionSelBody -> dimensionSelElem COMMA dimensionSelBody .

    R_S_PAREN       reduce using rule 40 (dimensionSelBody -> dimensionSelElem COMMA dimensionSelBody .)


state 150

    (53) channel -> L_A_PAREN matrice COMMA domcod COMMA domcod . R_A_PAREN

    R_A_PAREN       shift and go to state 152


state 151

    (70) builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN .

    VALIDITY        reduce using rule 70 (builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN .)
    CONDITIONING    reduce using rule 70 (builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN .)
    MARGINAL        reduce using rule 70 (builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN .)
    CROSS           reduce using rule 70 (builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN .)
    AND             reduce using rule 70 (builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN .)
    PLUS            reduce using rule 70 (builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN .)
    PIPE            reduce using rule 70 (builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN .)
    STAR            reduce using rule 70 (builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN .)
    R_A_PAREN       reduce using rule 70 (builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN .)
    L_A_PAREN       reduce using rule 70 (builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN .)
    SEMICOL         reduce using rule 70 (builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN .)
    $end            reduce using rule 70 (builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN .)
    RPAREN          reduce using rule 70 (builtin_function -> SWAP LPAREN domcod COMMA domcod RPAREN .)


state 152

    (53) channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN .

    VALIDITY        reduce using rule 53 (channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN .)
    CONDITIONING    reduce using rule 53 (channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN .)
    MARGINAL        reduce using rule 53 (channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN .)
    CROSS           reduce using rule 53 (channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN .)
    AND             reduce using rule 53 (channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN .)
    PLUS            reduce using rule 53 (channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN .)
    PIPE            reduce using rule 53 (channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN .)
    STAR            reduce using rule 53 (channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN .)
    R_A_PAREN       reduce using rule 53 (channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN .)
    L_A_PAREN       reduce using rule 53 (channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN .)
    SEMICOL         reduce using rule 53 (channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN .)
    $end            reduce using rule 53 (channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN .)
    RPAREN          reduce using rule 53 (channel -> L_A_PAREN matrice COMMA domcod COMMA domcod R_A_PAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VALIDITY in state 78 resolved as shift
WARNING: shift/reduce conflict for CONDITIONING in state 78 resolved as shift
WARNING: shift/reduce conflict for MARGINAL in state 78 resolved as shift
WARNING: shift/reduce conflict for CROSS in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 78 resolved as shift
WARNING: shift/reduce conflict for STAR in state 78 resolved as shift
WARNING: shift/reduce conflict for R_A_PAREN in state 78 resolved as shift
WARNING: shift/reduce conflict for L_A_PAREN in state 78 resolved as shift
